// 1st way of writing the testcase

package apitest;

import org.testng.annotations.Test;
import org.junit.Assert;


import io.restassured.RestAssured;
import io.restassured.path.json.JsonPath;
import io.restassured.http.Method;
import io.restassured.response.Response;
import io.restassured.specification.RequestScpecification;

public class APITest {

     public static void main(String[] args){
     
             //Store the URL value in a String baseUrl
             String baseUrl = "https://api.tmsandbox.co.nz/v1/Categories/6327/Details.json?catalogue=false";
             
              //Assign base URL value to the RESTful webservice
              RestAssured.baseURI = baseUrl;
              
              // Get the RequestSpecification of the request that you want to sent to the server.The server is specified by the BaseURI in the above step
              RequestSpecification Request = RestAssured.given();
              
              //Issue a request to the server by specifying the method Type and the method URL.
              // This returns the Response from the server.Store the reponse in a variable.
              Response response = Request.get();
              
              //Verify if the Status Code is 200
              Assert.assertequals(200,response.getStatusCode());
              
              /// Get the Json Path Object Instance from the Response Interface
              JsonPath jsonPathEvaluator = response.jsonpath();
              
              // **1st Acceptance criteria  -- Start**
              //Query the JsonPath Object to get a string value of the node specified by JsonPath:Name
              String Name =jsonPathEvaluator.get("Name");
              
              //Print the Name to see what we got
              System.out.println("Name recieved from reponse is " + Name);
              
              //Validate the 1st Accpetance Criteria -Name should be equal to Carbon credits
              Assert.assertequals(Name, "Carbon credits", " 1st Acceptance Criteria fullfilled -Correct Name recieved in the response"); 
               // **1st Acceptance criteria  -- End**
              
               // **2nd Acceptance criteria  -- Start**
              //Query the JsonPath Object to get a string value of the node specified by JsonPath:CanRelist
              String CanRelist =jsonPathEvaluator.get("CanRelist");
              
              //Print the CanRelist to see what we got
              System.out.println("CanRelist recieved from reponse is " + CanRelist);
              
              //Validate the 2nd Accpetance Criteria -Canrelist should be equal to True
              Assert.assertequals(Canrelist, "true", " 2nd Acceptance Criteria fullfilled -Correct CanRelist recieved in the response"); 
              // **2nd Acceptance criteria  -- End**
              
             // **3rd Acceptance criteria  -- Start**
             List<String> Promotions_value = jsonPathEvaluator.getList("Promotions");
             
             //Iterate over the list
             for(String Value: Promotions_value)
             {
               
              if(Value.Name == "Gallery")
               {
                    Assert.assertequals(Value.Description, "2x larger image", "3rd Acceptance Criteria fulfilled- Text is 2x larger image");
               } //if
               
               
              }//for
              
              // **3rd Acceptance criteria  -- End**
              
      }        
      
      }
      }
      
      
//*********2nd way of writing the testcase --we can do it using given when then too***************
package apitest;

import org.testng.annotations.Test;
import org.junit.Assert;


import io.restassured.RestAssured;
import io.restassured.path.json.JsonPath;
import io.restassured.http.Method;
import io.restassured.response.Response;
import io.restassured.specification.RequestScpecification;

public class APITest {

     public static void main(String[] args){
     
             //Store the URL value in a String baseUrl
             String baseUrl = "https://api.tmsandbox.co.nz/v1/Categories/6327/Details.json?catalogue=false";
             
                   
      @Test
      public void test_3_acceptance_criteria()
      {
           given()
           .when()
             .get(baseurl)
             
           //2 Accepatnace Criterias
           .then()
              .statuscode(200)
              
              //1st Acceptance Criteria -- Name= "Carbon Credits"
              .body("Name",equalTo("Carbon credits"))
              
              //2nd Acceptance Criteria -- CanRelist = "true"
              .body("CanRelist",equalTo("true"))
              
              // 3rd Accepatnce Criteria-  The Promotions element with Name = "Gallery" has a Description that contains the text "2x larger image"
              ArrayList<string> values = when().get(baseurl).then().extract().path("Promotions");
              
              for(string v:values){
                 if(v.Name == "Gallery")
                 {
                    Assert.assertequals(Value.Description, "2x larger image", "3rd Acceptance Criteria fulfilled- Text is 2x larger image");
                 } //if
                              
              }//for
       
      
      }// test_3_acceptance_criteria()
      
      }//public static void main(String[] args)
      
      }//public class APITest
              
              
